---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2022-12-17 - 13:39:00 +0000
  labels:
    app.kubernetes.io/name: demo-app
    app.kubernetes.io/version: "1.0"
  name: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-app
      app.kubernetes.io/version: "1.0"
  template:
    metadata:
      annotations:
        app.quarkus.io/build-timestamp: 2022-12-17 - 13:39:00 +0000
      labels:
        app.kubernetes.io/name: demo-app
        app.kubernetes.io/version: "1.0"
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: 262280523204.dkr.ecr.me-central-1.amazonaws.com/stokilo:5.0
          imagePullPolicy: Always
          name: demo-app
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
      serviceAccountName: demo-app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2022-12-17 - 13:39:00 +0000
  labels:
    app.kubernetes.io/name: demo-app
    app.kubernetes.io/version: "1.0"
  name: demo-app
imagePullSecrets:
  - name: ecr-credentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: demo-app-view
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: demo-app
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: defaultadmin
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-admin-view
roleRef:
  kind: Role
  name: defaultadmin
  apiGroup: ""
subjects:
  - kind: ServiceAccount
    name: demo-app
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/build-timestamp: 2022-12-17 - 13:39:00 +0000
  labels:
    app.kubernetes.io/name: demo-app
    app.kubernetes.io/version: "1.0"
  name: demo-app
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: demo-app
    app.kubernetes.io/version: "1.0"
  type: ClusterIP
